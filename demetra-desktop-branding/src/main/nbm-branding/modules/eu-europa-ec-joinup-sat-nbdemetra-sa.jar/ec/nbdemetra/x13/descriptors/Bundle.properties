arimaSpecUI.accdefDesc.desc=[acceptdefault] Controls whether the default model (ARIMA(0,1,1)(0,1,1)) may be chosen in the first step of the automatic model identification. If the Ljung-Box Q statistics for the residuals is acceptable, the default model is accepted and no further attempt will be made to identify and other.
arimaSpecUI.armaDesc.desc=[armalimit] The threshold value for t-statistics of ARMA coefficients and constant term used for the final test of model parsimony. If the highest order ARMA coefficient has a t-value less than this value in magnitude, the order of the model is reduced. Also if the constant term has a t-value less than ArmaLimit in magnitude, it is removed from the set of regressors.
arimaSpecUI.balancedDesc.desc=[balanced] Controls whether the automatic model identification procedure will have a preference for balanced models (i.e. models for which the order of the combined AR and differencing operator is equal to the order of the combined MA operator).
arimaSpecUI.bdDesc.desc=[bd] Seasonal differencing order.
arimaSpecUI.bpDesc.desc=[bp] The order of the seasonal autoregressive polynomial.
arimaSpecUI.bphiDesc.desc=[bphi, jqr] Coefficients of the seasonal autoregressive polynomial (AR). To each seasonal AR parameter in the model a label that indicates the procedure of its estimation is assigned (Undefined \u2013 no use of a user-defined input; Initial \u2013 the value defined by the user used as initial condition; Fixed \u2013 holds a parameter fixed at the value defined by the user).
arimaSpecUI.bqDesc.desc=[bq] The order of the seasonal moving average polynomial. 
arimaSpecUI.bthetaDesc.desc=[bth, jqs] Coefficients of the seasonal moving average polynomial (MA). To each seasonal MA parameter in the model a label that indicates the procedure of its estimation is assigned (Undefined \u2013 no use of a user-defined input; Initial \u2013 the value defined by the user is used as initial condition; Fixed \u2013 holds a parameter fixed at the value defined by the user).
arimaSpecUI.cancelDesc.desc=If the difference in moduli of an AR and an MA roots (when estimating ARIMA(1,0,1)(1,0,1) models in the second step of the automatic identification of the differencing orders) is smaller than Cancelation limit, the two roots are assumed equal and cancel out.
arimaSpecUI.checkmuDesc.desc=[checkmu] Controls whether the automatic model identification procedure will check for the significance of a constant term or will maintain the choice made by the user.
arimaSpecUI.dDesc.desc=[d] Regular differencing order
arimaSpecUI.enabledDesc.desc=When marked an automatic modelling of the ARIMA model will be performed. When unmarked it enables the user to enter the parameters of the ARIMA model.
arimaSpecUI.furlimitDesc.desc=When one of the roots in the estimation of the ARIMA(1,0,1)(1,0,1) plus mean model, which is performed in the second step of the automatic model identification procedure, is larger than Second unit root limit in modulus, it is checked if there is a common factor in the corresponding AR and MA polynomials of the ARMA model that can be cancelled (see Cancelation limit)). If there is no cancellation, the AR root is set equal to unity (i.e. the differencing order changes).
arimaSpecUI.hrinitialDesc.desc=[hrinitial] Controls whether Hannan-Rissanen estimation is done before exact maximum likelihood estimation to provide initial values when generating likelihood statistics for identifying the ARMA orders (hrinitial = yes).
arimaSpecUI.iurlimitDesc.desc=The threshold value for the initial unit root test in the automatic differencing procedure. When one of the roots in the estimation of the ARIMA(2,0,0)(1,0,0) plus mean model, performed in the first step of the automatic model identification procedure, is larger than First unit root limit in modulus, it is set equal to unity.
arimaSpecUI.ljungboxDesc.desc=[ljungboxlimit] Acceptance criterion for the confidence intervals of the Ljung-Box Q statistic. If the LjungBox Q statistics for the residuals of a final model is greater than LjungBox limit, the model is rejected, the outlier critical value is reduced, and model and outlier identification (if specified) is redone with a reduced value.
arimaSpecUI.meanDesc.desc=[imean] When marked, it is considered that the mean is part of the ARIMA model (it highly depends on the chosen model).
arimaSpecUI.mixedDesc.desc=[mixed] Controls whether ARIMA models with nonseasonal AR and MA terms or seasonal AR and MA terms will be considered in the automatic model identification procedure. When this option is disabled, a model with AR and MA terms in both the seasonal and nonseasonal parts of the model can be acceptable, provided there are not AR and MA terms in either the seasonal or non-seasonal.
arimaSpecUI.pDesc.desc=[p] The order of the non-seasonal autoregressive polynomial.
arimaSpecUI.phiDesc.desc=[phi, jpr] Coefficients of the non-seasonal autoregressive polynomial (AR). To each non-seasonal AR parameter in the model a label that indicates the procedure of its estimation is assigned (Undefined \u2013 no use of a user-defined input; Initial \u2013 the value defined by the user is used as initial condition; Fixed \u2013 holds a parameter fixed at the value defined by the user).
arimaSpecUI.qDesc.desc=[q] The order of the non-seasonal moving average polynomial.
arimaSpecUI.reducecvDesc.desc=[reducecv] The percentage by which the outlier\u2019s critical value will be reduced when an identified model is found to have a Ljung-Box statistic with an unacceptable confidence coefficient. The parameter should be between 0 and 1, and will only be active when automatic outlier identification is enabled. The reduced critical value will be set to (1\u2212ReduceCV)\u00d7CV, where CV is the original critical value.
arimaSpecUI.thetaDesc.desc=[th, jqr] Coefficients of the non-seasonal moving average (MA). To each non-seasonal MA parameter in the model a label that indicates the procedure of its estimation is assigned (Undefined \u2013 no use of a user-defined input; Initial \u2013 the value defined by the user is used as initial condition; Fixed \u2013 holds a parameter fixed at the value defined by the user).
arimaSpecUI.urlimitDesc.desc=[urfinal] The threshold value for the final unit root test. If the magnitude of an AR root for the final model is less than this number, a unit root is assumed, the order of the AR polynomial is reduced by one, and the appropriate order of the differencing (non-seasonal, seasonal) is increased.
basicSpecUI.pcDesc.desc=When marked, checks the quality of the input series and exclude highly problematic ones: e.g. these with a number of identical observations and/or missing values above pre-specified threshold values.  When unmarked, the thresholds are ignored and process is performed, when possible.
basicSpecUI.ppDesc.desc=Performs pre-processing of the series using a RegARIMA model.
basicSpecUI.spanDesc.desc=Specifies a span (data interval) of the time series to be used for the seasonal adjustment/modelling process. When the user limits the original time series to a given span then only this span will be used in the computations.
calendarSpecUI.easterDesc.desc=Specifies the Easter effect.
calendarSpecUI.tdDesc.desc=Specifies the trading days, the working days and the leap year effects.
easterSpecUI.durationDesc.desc=[w] Duration (length in days, between 1 and 20) of the Easter effect. 
easterSpecUI.durationDesc.name=Duration
easterSpecUI.enabledDesc.desc=When marked it enables the user to consider the Easter effect in the model.
easterSpecUI.testDesc.desc=A t-test applied for the significance of the Easter effect. The Easter effect is considered as significant if the t-statistic is greater than 1.96.
estimateSpecUI.spanDesc.desc=Specifies the span (data interval) of the time series to be used for the estimation of the RegARIMA model coefficients. The model is then applied to the whole series.
estimateSpecUI.tolDesc.desc=Convergence tolerance for the nonlinear estimation. The absolute changes in the log-likelihood function are compared to this value to check for the convergence of the estimation iterations.
outlierSpecUI.aoDesc.desc=[ao] When marked, it enables for an automatic identification of additive outliers.
outlierSpecUI.defaultvaDesc.desc=[critical] The critical value is automatically determined by the number of observations in the interval specified by the Detection span option. When this option is disabled, the procedure uses the critical value inputted in the Critical value item.
outlierSpecUI.enabledDesc.desc=Enables/disables the automatic detection of outliers in the span determined by the Detection span option.
outlierSpecUI.lsDesc.desc=[ls] When marked, it enables for an automatic identification of level shifts.
outlierSpecUI.lsrunDesc.desc=[lsrun] Computes a t-statistics to test the null hypotheses that all of the 2, 3, \u2026, lsrun successive level shifts cancel to form a temporary level shift.
outlierSpecUI.methodDesc.desc=[method] Determines how the program successively adds detected outliers to the model. At present only the AddOne method is supported.
outlierSpecUI.soDesc.desc=[so] When marked, it enables for an automatic identification of seasonal outliers.
outlierSpecUI.soDesc.name=Seasonal outlier
outlierSpecUI.spanDesc.desc=[int1, int2] A span of the time series to be searched for outliers.
outlierSpecUI.tcDesc.desc=[tc] When marked, it enables for an automatic identification of transitory changes.
outlierSpecUI.tcDesc.name=Transitory change
outlierSpecUI.tcrateDesc.desc=[tcrate] The rate of decay for the transitory change outlier.
regArimaSpecUI.arimaDesc.desc=An identification of the ARIMA part of the RegARIMA model can be done either in an automatic way or by the user who specifies appropriate parameters. This choice is controlled by the Automatic option and results in a list of parameters dedicated for a chosen ARIMA identification procedure. When the Automatic option is marked, the automatic identification procedure selects the final structure of the ARIMA model. Otherwise, the user can specify the structure of the ARIMA part of the RegARIMA model including the initial values for the individual AR and MA parameters.
regArimaSpecUI.basicDesc.desc=Controls the span of the time series to be used for the seasonal adjustment/modelling process.
regArimaSpecUI.estimateDesc.desc=Controls the span of the time series to be used for the estimation of the RegARIMA model coefficients.
regArimaSpecUI.outlierDesc.desc=Options to perform an automatic detection of additive outliers, temporary change outliers, level shifts, seasonal outliers, or any combination of the four using the specified model.
regArimaSpecUI.regressionDesc.desc=Options for an estimation of deterministic effects using the pre-defined regression variables.
regArimaSpecUI.transformDesc.desc=Allows for transformation of the series prior to the estimation of the RegARIMA model.
regressionSpecUI.calendarDesc.desc=Determines the manner in which the calendar effects are entered in the model.
regressionSpecUI.interventionDesc.desc=Allows for an estimation of the effects of the special events known a-priori.
regressionSpecUI.prespecDesc.desc=Allows the user to include the pre-specified outliers (i.e. those for which the type and timing is known a-priori) in the RegARIMA model.
regressionSpecUI.rampsDesc.desc=Allows the user to include ramp effects in the model. A ramp effect is a linear increase or decrease in the level of the series over a specified time interval.
regressionSpecUI.rampsDesc.name=Ramp effects
regressionSpecUI.userdefinedDesc.desc=Allows the user to include the user-defined variables (external regressors) in the model.
tradingDaysSpecUI.autoDesc.desc=Option for an automatic correction for the leap year effect. It is available when the transformation function is set to Auto.
tradingDaysSpecUI.holidaysDesc.desc=Enables for using the existing user-defined calendars to create the calendar regression variables.
tradingDaysSpecUI.lpDesc.desc=Option for including the leap-year effect in the model when transformation has been set to log. The leap year effect can be modelled by a contrast variable (LeapYear); or by a length-of-month (or length-of-quarter) regression variable (LengthofPeriod) or not included in the model (None).
 tradingDaysSpecUI.lpDesc.name=Leap year
tradingDaysSpecUI.optionDesc.desc=Specifies the type of a calendar being assigned to the series (Default \u2013 default calendar without country-specific holidays; Stock \u2013 day-of-week effects for inventories and other stock reported for the w-th day of the month; Holidays \u2013 the calendar variables based on user-defined calendar possibly with country specific holidays; UserDefined \u2013 calendar variables specified by the user) or excludes calendar variables from the regression model (None).
tradingDaysSpecUI.stdDesc.desc=The parameter indicates day of the month when inventories and other stock are reported (to denote the last day of the month enter 31).
tradingDaysSpecUI.tdDesc.desc=Defines the type of the trading days regression variables (TradingDays \u2013 six day-of-the-week regression variables; WorkingDays \u2013 one working/non-working day contrast variable).
tradingDaysSpecUI.testDesc.desc=Pre-tests the significance of the trading day regression variables using the AICC statistics. The trading day variables: are not included in the initial regression model but can be added to the RegARIMA model after the test (Add); belong to the initial regression model but can be removed from the RegARIMA model after the test (Remove); or are not pre-tested (None). 
tradingDaysSpecUI.testDesc.name=Test
transformSpecUI.adjustDesc.desc=[adjust] Pre-adjustment of the series for length of period or leap year effects. The option is available when Function is set to Log.
transformSpecUI.fnDesc.desc=[lam] Transformation of data (None - no transformation of data; Log - takes logs of data; Auto - the program tests for the log-level specification).
x11SpecUI.autotrendmaDesc.desc=[trendma] When marked, it enables for an automatic selection of the length of the Henderson filter used for the estimation of the trend.
x11SpecUI.calendarsigmaDesc.desc=[calendarsigma] Specifies if the standard errors used for extreme values detection and adjustment are computed separately for each calendar month/quarter(All); or separately for two complementary sets of calendar months/quarters specified by the sigmavec parameter(Select). Other options are to compute the standard errors separately for each period only if Cochran\u2019s hypothesis test determines that the irregular component is heteroskedastic by calendar month/quarter (signif) or to compute them from 5 year spans of irregulars (all).
x11SpecUI.forecastDesc.desc=[forecast(maxlead)] Length of the forecasts generated by the RegARIMA model in periods (positive values) or years (negative values).
x11SpecUI.fullseasonmaDesc.desc=[seasonalma] Enables the user to assign different seasonal filters for each period. The program can choose the final seasonal filter automatically (Msr).
x11SpecUI.modeDesc.desc=[mode] Determines the mode of the seasonal adjustment decomposition to be performed (Undefined \u2013 no assumption concerning the relationship between the time series components is made; Additive \u2013 assumes an additive relationship; Multiplicative \u2013 assumes a multiplicative relationship; LogAdditive \u2013 performs an additive decomposition of the logarithms of the series being adjusted). Could be changed by the program, if needed.
x11SpecUI.seasDesc.desc=When marked, the program computes a seasonal component. Otherwise, the seasonal component is not estimated and its values are all set to 0 (additive decomposition) or 1 (multiplicative decomposition).
x11SpecUI.seasonmaDesc.desc=[seasonalma] Specifies which seasonal moving average (i.e. seasonal filter) will be used to estimate the seasonal factors for the entire series. The program can choose the final seasonal filter automatically (Msr).
x11SpecUI.sigmavecDesc.desc=[sigmavec] Specifies one of the two groups of periods (month or quarters) for whose irregulars a group standard error will be calculated under the Calendarsigma=select option.
x11SpecUI.trendmaDesc.desc=[trendma] Enables the user to apply the user-defined length of the Henderson filter. The option is available when the Automatic Henderson filter checkbox is unmarked. Should be an odd number in the range [1, 101].
x13SpecUI.arimaDesc.desc=Enables for estimation of parameters of the ARIMA part of the RegARIMA model.
x13SpecUI.basicDesc.desc=Allows the user to limit the span (data interval) of the data to be modelled or seasonally adjusted.
x13SpecUI.benchDesc.desc=Allows the user for forcing of the annual sums of the seasonally adjusted data to be equal to the annual sums of the raw or calendar adjusted data.
x13SpecUI.estimateDesc.desc=Specifies the details of estimation procedure of the RegARIMA model determined in the Regression and Arima sections.
x13SpecUI.outlierDesc.desc=Enables the user to perform an automatic detection of additive outliers, temporary change outliers, level shifts, seasonal outliers, or any combination of the four, using the specified model.
x13SpecUI.regressionDesc.desc=Includes the settings relevant to the estimation of deterministic effects in the series with the pre-defined regression variables (user-defined variables, several types of pre-specified outliers, intervention variables and calendar effects).
x13SpecUI.transformDesc.desc=Includes the settings relevant to the transformation of the series prior to estimating the RegARIMA model.
x13SpecUI.x11Desc.desc=Includes the settings relevant to the decomposition step, performed by the X11 algorithm.
