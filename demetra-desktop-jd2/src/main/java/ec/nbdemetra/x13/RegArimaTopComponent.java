/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.nbdemetra.x13;

import ec.nbdemetra.ws.WorkspaceFactory;
import ec.nbdemetra.ws.WorkspaceItem;
import ec.nbdemetra.ws.ui.WorkspaceTsTopComponent;
import ec.tss.modelling.documents.RegArimaDocument;
import ec.ui.view.tsprocessing.TsProcessingViewer;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//ec.nbdemetra.x13//RegArima//EN",
autostore = false)
@TopComponent.Description(preferredID = "RegArimaTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Modelling", id = "ec.nbdemetra.x13.RegArimaTopComponent")
@ActionReference(path = "Menu/Statistical methods/Modelling/Single Analysis", position = 1100)
@TopComponent.OpenActionRegistration(displayName = "#CTL_RegArimaAction")
@Messages({
    "CTL_RegArimaAction=RegArima",
    "CTL_RegArimaTopComponent=RegArima Window",
    "HINT_RegArimaTopComponent=This is a RegArima window"
})
public final class RegArimaTopComponent extends WorkspaceTsTopComponent<RegArimaDocument> {

    private static RegArimaDocumentManager manager() {
        return WorkspaceFactory.getInstance().getManager(RegArimaDocumentManager.class);
    }

    public RegArimaTopComponent() {
        super(manager().create(WorkspaceFactory.getInstance().getActiveWorkspace()));
        initDocument();
    }

    public RegArimaTopComponent(WorkspaceItem<RegArimaDocument> doc) {
        super(doc);
        initDocument();
    }

    private void initDocument() {
        initComponents();
        setName(getDocument().getDisplayName());
        setToolTipText(Bundle.HINT_RegArimaTopComponent());
        panel = TsProcessingViewer.create(getDocument().getElement());
        this.add(panel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
   @Override
    protected String getContextPath() {
        return RegArimaDocumentManager.CONTEXTPATH;
    }
    
}
