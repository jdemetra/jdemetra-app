/*
 * Copyright 2013 National Bank of Belgium
 *
 * Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved 
 * by the European Commission - subsequent versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 * 
 * http://ec.europa.eu/idabc/eupl
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and 
 * limitations under the Licence.
 */
package ec.nbdemetra.ui;

import demetra.demo.DemoTsBuilder;
import demetra.ui.ColorSchemeManager;
import demetra.ui.DemetraOptions;
import demetra.ui.NamedService;
import demetra.ui.TsActions;
import demetra.ui.components.JObsFormatComponent;
import demetra.ui.components.JTsChart;
import demetra.ui.components.parts.HasColorSchemeSupport;
import demetra.ui.components.parts.HasTsCollection.TsUpdateMode;
import demetra.ui.nodes.NamedServiceChoicePanel;
import ec.nbdemetra.ui.properties.l2fprod.OutlierDefinitionsEditor;
import ec.util.chart.ColorScheme;
import org.openide.explorer.ExplorerManager;
import org.openide.nodes.Node;
import org.openide.util.ImageUtilities;

import javax.swing.*;
import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.util.stream.Collectors;

final class DemetraUIPanel extends javax.swing.JPanel implements VetoableChangeListener, PropertyChangeListener {

    private final DemetraUIOptionsPanelController controller;
    final JTsChart colorSchemePreviewer;

    DemetraUIPanel(DemetraUIOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        colorSchemePreviewer = new JTsChart();
        colorSchemePreviewer.setTsCollection(DemoTsBuilder.randomTsCollection(3));
        colorSchemePreviewer.setTsAction(TsActions.NO_ACTION);
        colorSchemePreviewer.setTsUpdateMode(TsUpdateMode.None);
        chartPreviewPanel.add(colorSchemePreviewer);

        outliersEditorCB.setModel(new DefaultComboBoxModel(OutlierDefinitionsEditor.PrespecificiedOutliersEditor.values()));

        jSlider1.setMinimum(10);
        jSlider1.setMaximum(200);
        jSlider1.setValue(100);
        jSlider1.setMajorTickSpacing(100);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintTicks(true);
        jSlider1.setPaintLabels(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setLabelTable(jSlider1.createStandardLabels(100, 100));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        chartsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        colorSchemeChoicePanel = new NamedServiceChoicePanel();
        colorSchemeLabel = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        chartPreviewPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        dataFormatLabel = new javax.swing.JLabel();
        dataFormatComponent = new demetra.ui.components.JObsFormatComponent();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        growthChartsPanel = new javax.swing.JPanel();
        growthLastYears = new javax.swing.JSpinner();
        lastYearsLabel = new javax.swing.JLabel();
        outliersEditorPanel = new javax.swing.JPanel();
        lastYearsLabel1 = new javax.swing.JLabel();
        outliersEditorCB = new javax.swing.JComboBox<>();
        htmlFontPanel = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        popupMenuPanel = new javax.swing.JPanel();
        iconsVisibleCB = new javax.swing.JCheckBox();

        setPreferredSize(new java.awt.Dimension(367, 426));
        setLayout(new java.awt.BorderLayout());

        chartsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.chartsPanel.border.title"))); // NOI18N
        chartsPanel.setLayout(new java.awt.BorderLayout(0, 15));

        jPanel2.setLayout(new java.awt.BorderLayout(10, 0));
        jPanel2.add(colorSchemeChoicePanel, java.awt.BorderLayout.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(colorSchemeLabel, org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.colorSchemeLabel.text")); // NOI18N
        jPanel2.add(colorSchemeLabel, java.awt.BorderLayout.WEST);
        jPanel2.add(filler2, java.awt.BorderLayout.LINE_END);

        chartsPanel.add(jPanel2, java.awt.BorderLayout.NORTH);

        chartPreviewPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        chartPreviewPanel.setMaximumSize(new java.awt.Dimension(100, 150));
        chartPreviewPanel.setMinimumSize(new java.awt.Dimension(100, 150));
        chartPreviewPanel.setPreferredSize(new java.awt.Dimension(100, 150));
        chartPreviewPanel.setLayout(new java.awt.BorderLayout());
        chartsPanel.add(chartPreviewPanel, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout(10, 0));

        org.openide.awt.Mnemonics.setLocalizedText(dataFormatLabel, org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.dataFormatLabel.text")); // NOI18N
        jPanel3.add(dataFormatLabel, java.awt.BorderLayout.WEST);
        jPanel3.add(dataFormatComponent, java.awt.BorderLayout.CENTER);

        chartsPanel.add(jPanel3, java.awt.BorderLayout.SOUTH);

        add(chartsPanel, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        growthChartsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.growthChartsPanel.border.title"))); // NOI18N

        growthLastYears.setModel(new javax.swing.SpinnerNumberModel(4, 1, 15, 1));

        org.openide.awt.Mnemonics.setLocalizedText(lastYearsLabel, org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.lastYearsLabel.text")); // NOI18N

        javax.swing.GroupLayout growthChartsPanelLayout = new javax.swing.GroupLayout(growthChartsPanel);
        growthChartsPanel.setLayout(growthChartsPanelLayout);
        growthChartsPanelLayout.setHorizontalGroup(
            growthChartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(growthChartsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lastYearsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(growthLastYears, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        growthChartsPanelLayout.setVerticalGroup(
            growthChartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(growthChartsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(growthChartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastYearsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(growthLastYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.add(growthChartsPanel);

        outliersEditorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.outliersEditorPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lastYearsLabel1, org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.lastYearsLabel1.text")); // NOI18N

        javax.swing.GroupLayout outliersEditorPanelLayout = new javax.swing.GroupLayout(outliersEditorPanel);
        outliersEditorPanel.setLayout(outliersEditorPanelLayout);
        outliersEditorPanelLayout.setHorizontalGroup(
            outliersEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outliersEditorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lastYearsLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outliersEditorCB, 0, 105, Short.MAX_VALUE)
                .addContainerGap())
        );
        outliersEditorPanelLayout.setVerticalGroup(
            outliersEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outliersEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lastYearsLabel1)
                .addComponent(outliersEditorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(outliersEditorPanel);

        jPanel4.add(jPanel1);

        htmlFontPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.htmlFontPanel.border.title"))); // NOI18N
        htmlFontPanel.setLayout(new java.awt.GridLayout(1, 0));
        htmlFontPanel.add(jSlider1);

        jPanel4.add(htmlFontPanel);

        popupMenuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.popupMenuPanel.border.title_1"))); // NOI18N
        popupMenuPanel.setPreferredSize(new java.awt.Dimension(562, 46));
        popupMenuPanel.setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(iconsVisibleCB, org.openide.util.NbBundle.getMessage(DemetraUIPanel.class, "DemetraUIPanel.iconsVisibleCB.text")); // NOI18N
        iconsVisibleCB.setFocusPainted(false);
        popupMenuPanel.add(iconsVisibleCB, java.awt.BorderLayout.CENTER);

        jPanel4.add(popupMenuPanel);

        add(jPanel4, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        DemetraOptions options = DemetraOptions.getDefault();
        colorSchemeChoicePanel.setContent(ColorSchemeManager.getDefault().getColorSchemes().stream().map(ColorSchemeNamedService::new).collect(Collectors.toList()));
        colorSchemeChoicePanel.getExplorerManager().addVetoableChangeListener(this);
        colorSchemeChoicePanel.setSelectedServiceName(options.getColorSchemeName());
        dataFormatComponent.setObsFormat(options.getObsFormat());
        dataFormatComponent.addPropertyChangeListener(this);
        growthLastYears.setValue(options.getGrowthLastYears());
        iconsVisibleCB.setSelected(options.isPopupMenuIconsVisible());
        jSlider1.setValue(options.getHtmlZoomRatio());

        outliersEditorCB.setSelectedItem(DemetraUI.getDefault().getPrespecifiedOutliersEditor());
    }

    void store() {
        DemetraOptions options = DemetraOptions.getDefault();
        options.setColorSchemeName(colorSchemeChoicePanel.getSelectedServiceName());
        options.setObsFormat(dataFormatComponent.getObsFormat());
        options.setGrowthLastYears((Integer) growthLastYears.getValue());
        options.setPopupMenuIconsVisible(iconsVisibleCB.isSelected());
        options.setHtmlZoomRatio(jSlider1.getValue());

        DemetraUI.getDefault().setPrespecifiedOutliersEditor((OutlierDefinitionsEditor.PrespecificiedOutliersEditor) outliersEditorCB.getSelectedItem());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    @Override
    public void vetoableChange(PropertyChangeEvent evt) throws PropertyVetoException {
        if (ExplorerManager.PROP_SELECTED_NODES.equals(evt.getPropertyName())) {
            Node[] nodes = (Node[]) evt.getNewValue();
            if (nodes.length > 0) {
                ColorSchemeNamedService tmp = nodes[0].getLookup().lookup(ColorSchemeNamedService.class);
                colorSchemePreviewer.setColorScheme(tmp.getColorScheme());
                colorSchemePreviewer.setTitle(tmp.getDisplayName());
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(JObsFormatComponent.OBS_FORMAT_PROPERTY) && evt.getNewValue() != null) {
            colorSchemePreviewer.setObsFormat(dataFormatComponent.getObsFormat());
        }
    }

    JObsFormatComponent getDataFormatComponent() {
        return dataFormatComponent;
    }

    @lombok.AllArgsConstructor
    static final class ColorSchemeNamedService implements NamedService {

        @lombok.Getter
        private final ColorScheme colorScheme;

        @Override
        public String getName() {
            return colorScheme.getName();
        }

        @Override
        public String getDisplayName() {
            return colorScheme.getDisplayName();
        }

        @Override
        public Image getIcon(int type, boolean opened) {
            return ImageUtilities.icon2Image(HasColorSchemeSupport.iconOf(colorScheme));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel chartPreviewPanel;
    private javax.swing.JPanel chartsPanel;
    private NamedServiceChoicePanel colorSchemeChoicePanel;
    private javax.swing.JLabel colorSchemeLabel;
    private demetra.ui.components.JObsFormatComponent dataFormatComponent;
    private javax.swing.JLabel dataFormatLabel;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel growthChartsPanel;
    private javax.swing.JSpinner growthLastYears;
    private javax.swing.JPanel htmlFontPanel;
    private javax.swing.JCheckBox iconsVisibleCB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lastYearsLabel;
    private javax.swing.JLabel lastYearsLabel1;
    private javax.swing.JComboBox<String> outliersEditorCB;
    private javax.swing.JPanel outliersEditorPanel;
    private javax.swing.JPanel popupMenuPanel;
    // End of variables declaration//GEN-END:variables
}
