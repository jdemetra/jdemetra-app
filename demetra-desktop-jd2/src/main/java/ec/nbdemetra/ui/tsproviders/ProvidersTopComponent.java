/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.nbdemetra.ui.tsproviders;

import javax.swing.text.DefaultEditorKit;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.util.HelpCtx;
import org.openide.util.lookup.InstanceContent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//ec.nbdemetra.ui//Providers//EN",
autostore = false)
@TopComponent.Description(preferredID = "ProvidersTopComponent",
iconBase = "ec/nbdemetra/ui/table.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "ec.nbdemetra.ui.ProvidersTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ProvidersAction",
preferredID = "ProvidersTopComponent")
@NbBundle.Messages({
    "CTL_ProvidersAction=Providers",
    "CTL_ProvidersTopComponent=Providers",
    "HINT_ProvidersTopComponent=This is a Providers window"
})
public final class ProvidersTopComponent extends TopComponent implements ExplorerManager.Provider {

    private final ExplorerManager mgr = new ExplorerManager();
    private final InstanceContent content = new InstanceContent();

    public ProvidersTopComponent() {
        initComponents();
        setName(Bundle.CTL_ProvidersTopComponent());
        setToolTipText(Bundle.HINT_ProvidersTopComponent());

        ((BeanTreeView) jScrollPane1).setRootVisible(false);
        ((BeanTreeView) jScrollPane1).setDropTarget(true);

        getActionMap().put(DefaultEditorKit.copyAction, ExplorerUtils.actionCopy(mgr));

        associateLookup(ExplorerUtils.createLookup(mgr, getActionMap()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new BeanTreeView();

        setLayout(new java.awt.BorderLayout());
        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        mgr.setRootContext(new ProvidersNode());
    }

    @Override
    public void componentClosed() {
        mgr.setRootContext(new AbstractNode(Children.LEAF));
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return mgr;
    }

    @Override
    public HelpCtx getHelpCtx() {
        return new HelpCtx("ec.nbdemetra.ui.datasources");
    }
}
