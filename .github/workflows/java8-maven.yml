name: Java8+ with Maven

on: [ push, pull_request ]

jobs:
  build-and-test-job:
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 17 ]
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        experimental: [ false ]
        include:
          - java: '-ea'
            os: ubuntu-latest
            experimental: true

    name: JDK${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Build and (headless) test with Maven
        uses: GabrielBB/xvfb-action@v1
        with:
          run: mvn -B -ntp package

  snapshot-job:
    needs: build-and-test-job
    if: startsWith(github.repository, 'jdemetra/') && startsWith(github.ref, 'refs/heads/develop')
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]

    name: Snapshot on develop
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Deploy snapshot with Maven if settings defined
        run: test ! -f ci.settings.xml || mvn -B -ntp deploy -DskipTests=true -s ci.settings.xml -P base-deploy,snapshot-deploy,!non-deployable-modules
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  release-job:
    needs: build-and-test-job
    if: startsWith(github.repository, 'jdemetra/') && startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]

    name: Release on tag
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Deploy with Maven if settings defined
        run: test ! -f ci.settings.xml || mvn -B -ntp deploy -DskipTests=true -s ci.settings.xml -P base-deploy,release-deploy,!non-deployable-modules
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Build assets with Maven
        run: mvn -B -ntp install -DskipTests=true -P base-deploy
        env:
          SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Create dummy file if no assets
        run: test -d "binaries" || (mkdir binaries && echo "no assets" > binaries/no_assets.txt)

      - name: Create draft release and upload assets
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'binaries/*'
